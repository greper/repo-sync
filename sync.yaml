repo: # 仓库列表
  fs-admin: # 上游项目1，可以任意命名
    url: "https://github.com/fast-crud/fs-admin-antdv"      # 仓库地址
    path: "fs-admin-antdv"            # submodule保存路径
    branch: "main"                    # 要同步过来的分支
  fs-server: # 上游项目2，可以任意命名
    url: "https://github.com/fast-crud/fs-server-js"        # 仓库地址
    path: "fs-server-js"              # submodule保存路径
    branch: "main"                    # 要同步过来的分支
  test: # 你的项目（接受同步项目），可以任意命名
    url: "https://github.com/handsfree-work/trident-test"           # 仓库地址
    path: "target"                    # submodule子路径
    branch: "main"                    # 你的代码开发主分支（接受合并的分支）例如dev、main等
    token: ""                         # 仓库token，用于提交PR, 前往 https://github.com/settings/tokens 创建token
    type: github                      # 仓库类型，用于提交PR，可选项：[github/gitee/gitea/gitlab]
#  repo4:                           # 你可以配置更多仓库
#    url: "https://xxxxxxx"
#    path: "repo4_dir"
#    branch: "main_branch_name"


sync: # 同步配置，可以配置多个同步任务
  client: # 同步任务1，可以任意命名
    src: # 源仓库
      repo: fs-admin                  # 源仓库名称，上面repo配置的仓库名称引用
      dir: '.'                        #要同步给target的目录
    target: #目标仓库
      repo: test                      # 目标仓库名称，上面repo配置的仓库名称引用
      dir: 'package/ui/certd-client'  # 接收src同步过来的目录
      branch: 'client_sync'           # 同步分支名称（需要配置一个未被占用的分支名称）
  server: # 同步任务2
    src: # 同上
      repo: fs-server
      dir: '.'
    target:
      repo: test
      dir: 'package/ui/certd-server'
      branch: 'server_sync'
#  task3:                          #你可以配置更多同步任务
#    src:
#      repo: src_repo_name
#      dir: ./dir
#    target:
#      repo: target_repo_name
#      dir: ./dir
#      branch: sync_branch_name        # 需要配置一个未被占用的分支名称

options: #选项
  repo_root: repo         # submodule保存根目录
  push: true              # 同步后是否push
  pr: true                # 是否创建pr，需要目标仓库配置token和type
  proxy_fix: true         # 是否将https代理改成http://开头
  use_system_proxy: true  # 是否使用系统代理